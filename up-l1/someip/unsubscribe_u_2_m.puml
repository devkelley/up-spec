@startuml unsubscribe_u_2_m
'https://plantuml.com/sequence-diagram

' SPDX-FileCopyrightText: 2023 Contributors to the Eclipse Foundation
'
' See the NOTICE file(s) distributed with this work for additional
' information regarding copyright ownership.
' 
' This program and the accompanying materials are made available under
' the terms of the Apache License Version 2.0 which is available at
' https://www.apache.org/licenses/LICENSE-2.0
'
' SPDX-FileType: SOURCE
' SPDX-License-Identifier: Apache-2.0

autonumber
box uDevice #white
	actor uE #red
	entity uSubscription as SM1 #brown
	entity SOMEIPBridge as Bridge #orange
end box
box mDevice #white
	entity SOMEIPSD as SM2 #orange
end box

uE -> SM1: Unsubscribe(UnsubscribeRequest)
note right
 	<size:12>**UnsubscribeRequest:**</size> 
	""topic:"" { ""uri"": ""//topic//"" }  
	""subscriber"": { ""uri"": "up://uDevice/uE/" }
end note

alt Success
	SM1--> uE: Status
	note right
		<size:12>**Status:**</size>
		""code"": ""OK""
	end note
else Failure
	SM1 --> uE: Status
	note right
		<size:12>**Status:**</size> 
		""code"": ""INVALID_ARGUMENT | NOT_FOUND | PERMISSION_DENIED""
	end note
end alt

|||
== Check if the last local subscriber has Unsubscribed ==
opt uE is the last subscriber
	SM1 -> SM1
 	note right
		""SubscriptionStatus.state"" == 
		""UNSUBSCRIBE_PENDING""
	end note

 	SM1 -> Bridge: Unsubscribe(UnsubscribeRequest)
	note right
 		<size:12>**UnsubscribeRequest:**</size> 
		""topic:"" { ""uri"": ""//topic//"" }  
		""subscriber"": { ""uri"": "up://mDevice/core.usubscription/2" }
	end note
 
	Bridge -> Bridge: Create StopSubscribeEventGroup
	Bridge -[#orange]> SM2: StopSubscribeEventgroup()
 
	Bridge --> SM1: Status
	note right
		<size:12>**Status:**</size>
		""code"": ""OK""
	end note
end opt
@enduml